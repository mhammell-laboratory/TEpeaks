# Makefile for TEToolkit_c++, utilities for the TE associated NGS data analysis.
#
#    Version 0.1
#
#    Copyright (C) 2016 Bioinformatics Shared Resource, CSHL.
#    Portions copyright (C) 2016 Cold Spring Harbor Laboratory.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

MACOS = 

CC       = g++
AR     = ar
RANLIB = ranlib

CPPFLAGS = $(DFLAGS) ${MACOS} $(INCLUDES)
#CFLAGS   = -g -fpermissive -Wall -O9 -O3 -std=c++11 -fPIC 
CFLAGS   = -g -fpermissive -Wall -O1 -std=c++11 -fPIC 
LDFLAGS  = -O9 -fpermissive
LDLIBS   =
DFLAGS =     -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_CURSES_LIB=1



SRCDIR = src/TEToolkit
INCLUDES=   -I$(HTSDIR) -I$(SRCDIR) -I$(BOOST_ROOT)
LIBCURSES=  -lcurses # -lXCurses

prefix      = /usr/local
exec_prefix = $(prefix)
bindir      = $(exec_prefix)/bin
mandir      = $(prefix)/share/man
man1dir     = $(mandir)/man1

#MKDIR_P = mkdir -p
#INSTALL = install -p
#INSTALL_PROGRAM = $(INSTALL)
#INSTALL_DATA    = $(INSTALL) -m 644
#INSTALL_DIR     = $(MKDIR_P) -m 755


#PROGRAMS = libTEToolkit.so
PROGRAMS = TEpeaks

all: $(TEToolkitLIB) $(PROGRAMS)


HTSDIR = ./src/htslib-1.2.1_src
include $(HTSDIR)/htslib.mk
HTSLIB = $(HTSDIR)/libhts.a
BGZIP  = $(HTSDIR)/bgzip
TEToolkitLIB = libTEToolkit.a


PACKAGE_VERSION = 0.1


LOBJS= src/TEToolkit/Candidate_Peaks.o \
    src/TEToolkit/EM_TEpeaks.o \
    src/TEToolkit/EMestimate_reads.o \
    src/TEToolkit/Float64HashTable.o \
    src/TEToolkit/GeneFeatures.o \
    src/TEToolkit/IntervalTree.o \
    src/TEToolkit/Parser.o \
    src/TEToolkit/PeakModel.o \
    src/TEToolkit/cStatistics.o \
    src/TEToolkit/myLog.o \
    src/TEToolkit/zeroin.o \
    src/TEToolkit/ShortRead.o \
    src/TEToolkit/CallerFromAlignments.o \
    src/TEToolkit/PeakDetect.o \
    src/TEToolkit/Pileup.o \
    src/TEToolkit/PeakIO.o 



.SUFFIXES: .cpp .o

%.o: %.cpp
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<

TEpeaks: $(TEToolkitLIB) $(HTSLIB) src/TEpeaks.o src/narrow_TEpeaks.o
	$(CC) $(LDFLAGS)  -o $@ src/TEpeaks.o src/narrow_TEpeaks.o $(TEToolkitLIB) $(HTSLIB) $(LDLIBS) -lz -lm -lpthread

#libTEToolkit.so: $(LOBJS) $(HTSLIB)
#	$(CC) -pthread $(LDFLAGS) -o $@ $(AOBJS) $(HTSLIB) $(LDLIBS) $(LIBCURSES) -lm -lz

#libTEToolkit.so: $(LOBJS) $(HTSLIB)
#	$(CC) -shared  -lpthread $(LDFLAGS) -o $@ $(LOBJS) $(HTSLIB) $(LDLIBS) -lz -lm


libTEToolkit.a: $(LOBJS)
#	@-rm -f $@
	$(AR) -rc $@ $(LOBJS)
	-$(RANLIB) $@




src/TEToolkit/CallerFromAlignments.o: src/TEToolkit/CallerFromAlignments.cpp
src/TEToolkit/Candidate_Peaks.o: src/TEToolkit/Candidate_Peaks.cpp
src/TEToolkit/EM_TEpeaks.o: src/TEToolkit/EM_TEpeaks.cpp
src/TEToolkit/EMestimate_reads.o: src/TEToolkit/EMestimate_reads.cpp
src/TEToolkit/Float64HashTable.o: src/TEToolkit/Float64HashTable.cpp
src/TEToolkit/GeneFeatures.o: src/TEToolkit/GeneFeatures.cpp
src/TEToolkit/IntervalTree.o: src/TEToolkit/IntervalTree.cpp
src/TEToolkit/Parser.o: src/TEToolkit/Parser.cpp
src/TEToolkit/PeakDetect.o: src/TEToolkit/PeakDetect.cpp
src/TEToolkit/PeakIO.o: src/TEToolkit/PeakIO.cpp
src/TEToolkit/PeakModel.o: src/TEToolkit/PeakModel.cpp
src/TEToolkit/Pileup.o: src/TEToolkit/Pileup.cpp
src/TEToolkit/ShortRead.o: src/TEToolkit/ShortRead.cpp
src/TEToolkit/Statistics.o: src/TEToolkit/Statistics.cpp
src/TEToolkit/cStatistics.o: src/TEToolkit/cStatistics.cpp
src/TEToolkit/myLog.o: src/TEToolkit/myLog.cpp
src/TEToolkit/zeroin.o: src/TEToolkit/zeroin.cpp


src/TEpeaks.o: src/TEpeaks.cpp src/narrow_TEpeaks.h src/TEToolkit/Constants.h

src/narrowPeaks.o: src/narrowPeaks.cpp src/TEToolkit/Constants.h src/TEToolkit/

mostlyclean:
	-rm -f src/*.o libTEToolkit.a src/TEToolkit/*.o

clean: mostlyclean
	-rm -f $(PROGRAMS)

distclean: clean
	-rm -f TAGS

clean-all: clean


tags:
	ctags -f TAGS *.[ch] misc/*.[ch]


force:


.PHONY: all clean clean-all distclean force 
.PHONY: mostlyclean tags
